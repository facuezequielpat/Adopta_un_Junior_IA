# -*- coding: utf-8 -*-
"""Reto IA AuJ.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W4I4se4GHpiCEmHsw7nafFAY4OI7gB_u"""

"""#Codigo"""

from transformers import AutoModelForCausalLM, AutoTokenizer

print("Hola dime estos 3 datos para una mejor personalizacion de la buqueda de las peliculas")
Edad=str(input("Dime tu Edad:"))
Pelicula_preferida= str(input("Dime tu pelicula favorita:"))
Estado_de_animo_actual=str(input("Dime tu estado de animo actual:"))

# Cargar modelo y tokenizador
model_name = 'microsoft/Phi-4-mini-instruct'#"context-labs/meta-llama-Llama-3.2-3B-Instruct-FP16"
tokenizer = AutoTokenizer.from_pretrained(model_name)#carga el tokenizador que convierte texto en tokens numéricos.
model = AutoModelForCausalLM.from_pretrained(
    model_name,
    device_map="cuda",   # Cambia a "cuda" si tenés GPU
    dtype="auto"
)#

# Prompt de instrucción
prompt = f"""
Recomienda 3 películas en formato JSON.

Teniendo en cuenta la Edad:{Edad}
Teniendo en cuenta la Pelicula favorita:{Pelicula_preferida}
Teniendo en cuenta el Estado de animo actual:{Estado_de_animo_actual}

Cada película debe tener:
- título
- género
- motivo de recomendación
""" + """Ejemplo de formato:
[
  {"título": "...", "género": "...", "motivo": "..."},
  {"título": "...", "género": "...", "motivo": "..."},
  {"título": "...", "género": "...", "motivo": "..."}
]

No añadas explicaciones ni texto fuera del bloque JSON.
"""

# Tokenizar entrada
inputs = tokenizer(prompt, return_tensors="pt").to(model.device)

# Generar salida
outputs = model.generate(
    **inputs,
    max_new_tokens=300,
    temperature=0.7,  # más creatividad
    top_p=0.9
)

# Decodificar y mostrar
result = tokenizer.decode(outputs[0], skip_special_tokens=True)
print(result)

from google import genai
from google.colab import userdata

# Get the API key from Colab secrets
api_key = userdata.get('gemini')

# Initialize the client with the API key
client = genai.Client(api_key=api_key)

response = client.models.generate_content(
    model="gemini-2.5-flash",
    contents=f"""Proporcione una lista de tres recomendaciones de películas en formato JSON.

Teniendo en cuenta la Edad:{Edad}
Teniendo en cuenta la Pelicula favorita:{Pelicula_preferida}
Teniendo en cuenta el Estado de animo actual:{Estado_de_animo_actual}""" + """


Cada película debe incluir:

“Título”: el título de la película
“Género”: el género de la película
“Motivo”: el motivo por el que recomienda la película
Asegúrese de que el JSON esté correctamente estructurado y siga el siguiente formato:
[
{“Título”: “Título de la película 1”, “Género”: “Género 1”, “motivo”: “Motivo para recomendar la película 1”},
{“Título”: “Título de la película 2”, “Género”: “Género 2”, “motivo”: “Motivo para recomendar la película 2”},
{“Título”: “Título de la película 3”, “Género”: “Género 3”, “motivo”: “Motivo para recomendar la película 3”}
]""",
)

print(response.text)
